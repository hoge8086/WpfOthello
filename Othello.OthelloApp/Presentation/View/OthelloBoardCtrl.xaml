<UserControl x:Class="Othello.OthelloApp.Presentation.View.OthelloBoardCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Othello.OthelloApp.Presentation.View"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <!--オセロボード-->
    <UserControl.Resources>
    </UserControl.Resources>
    <ItemsControl x:Name="board" ItemsSource="{Binding Board}" Margin="5">
        <ItemsControl.Template>
            <!--ボードの枠-->
            <ControlTemplate>
                <Border BorderThickness="12" CornerRadius="8" BorderBrush="DarkRed">
                    <!--ボード-->
                    <ItemsPresenter/>
                </Border>
            </ControlTemplate>
        </ItemsControl.Template>
        <ItemsControl.ItemsPanel>
            <!--行-->
            <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <!--1行の中の列-->
                <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal">
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!--セルの定義(ボタン)-->
                            <Button x:Name="button" Height="50" Width="50" BorderThickness=".75" Background="LimeGreen"
                                    Command="{Binding Path=DataContext.PutStoneCommand, ElementName=board}"
                                    local:ButtonHelper.CommandParameter="{Binding .}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <!--背景-->
                                        <Grid>
                                            <Border BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                                            <ContentPresenter/>
                                        </Grid>
                                    </ControlTemplate>
                                </Button.Template>
                                <!--石(デフォは非表示)-->
                                <Grid>
                                    <!--置いてあるとき-->
                                    <local:OthelloStone x:Name="stone" Height="42" Width="42" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden"/>
                                    <!--置けるとき-->
                                    <Ellipse x:Name="ellipse"  Height="42" Width="42" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden"
                                            StrokeDashArray="2,2"
                                            StrokeThickness="3">
                                        <Ellipse.Stroke>
                                            <SolidColorBrush Color="{Binding DataContext.CurrentPlayer, ElementName=board, Converter={StaticResource playerToColor}}"/>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                </Grid>
                            </Button>
                            <!--データトリガーを使用し、セルの状態で見せ方を変える-->
                            <DataTemplate.Triggers>
                                <!--【セルではない空間】-->
                                <DataTrigger Binding="{Binding CellType}" Value="NotCell">
                                    <!--セル背景を茶色にする-->
                                    <Setter TargetName="button" Property="Background" Value="DarkRed"/>
                                    <Setter TargetName="button" Property="BorderThickness" Value="0"/>
                                </DataTrigger>
                                <!--【空のセル】-->
                                <DataTrigger Binding="{Binding CellType}" Value="Empty">
                                    <!--デフォが空のセルなので特に設定は不要-->
                                </DataTrigger>
                                <!--【空で置けるセル】-->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding CellType}" Value="EmptyAndCanPut"/>
                                        <Condition Binding="{Binding ElementName=button, Path=IsMouseOver}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <!--点線を表示する-->
                                    <Setter TargetName="ellipse" Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                                <!--【空で置けるセル(マウスオーバー時)】-->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding CellType}" Value="EmptyAndCanPut"/>
                                        <Condition Binding="{Binding ElementName=button, Path=IsMouseOver}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <!--石を表示して現在のプレイヤーの色で塗る-->
                                    <Setter TargetName="stone" Property="Color" Value="{Binding DataContext.CurrentPlayer, ElementName=board, Converter={StaticResource playerToColor}}"/>
                                    <Setter TargetName="stone" Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                                <!--【石が置いてあるセル】-->
                                <DataTrigger Binding="{Binding CellType}" Value="PutStone">
                                    <!--石を表示して所有するプレイヤーの色で塗る-->
                                    <Setter TargetName="stone" Property="Color" Value="{Binding StoneType, Converter={StaticResource playerToColor}}"/>
                                    <Setter TargetName="stone" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</UserControl>
