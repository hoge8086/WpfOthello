<UserControl x:Class="Othello.OthelloApp.Presentation.View.OthelloBoardCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Othello.OthelloApp.Presentation.View"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <!--オセロボード-->
    <ItemsControl Grid.Row="2" x:Name="board" ItemsSource="{Binding Board}" Margin="5">
        <ItemsControl.Template>
            <!--ボードの枠-->
            <ControlTemplate>
                <Border BorderThickness="12" CornerRadius="8" BorderBrush="DarkRed">
                    <!--ボード-->
                    <ItemsPresenter/>
                </Border>
            </ControlTemplate>
        </ItemsControl.Template>
        <ItemsControl.ItemsPanel>
            <!--行-->
            <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <!--1行の中の列-->
                <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal">
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <!--セルの定義-->
                        <DataTemplate>
                            <!--ボタン(セル)-->
                            <Button x:Name="button" BorderBrush="Black" BorderThickness=".75" Background="LimeGreen" Height="50" Width="50" >
                                <!--石-->
                                <Ellipse x:Name="ellipse" Margin="2" Height="42" Width="42" StrokeThickness="0.5"/>
                            </Button>
                            <!--データテンプレートを使用し、セルの状態で見せ方を変える-->
                            <DataTemplate.Triggers>
                                <!--【セルではない空間】-->
                                <DataTrigger Binding="{Binding CellType}" Value="NotCell">
                                    <!--セル背景は茶色-->
                                    <Setter TargetName="button" Property="Background" Value="DarkRed"/>
                                    <!--石は見えない-->
                                    <Setter TargetName="ellipse" Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <!--【空のセル】-->
                                <DataTrigger Binding="{Binding CellType}" Value="Empty">
                                    <!--石は見えない-->
                                    <Setter TargetName="ellipse" Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <!--【空で置けるセル】-->
                                <DataTrigger Binding="{Binding CellType}" Value="EmptyAndCanPut">
                                    <!--石は点線だけを表示-->
                                        <!--石の色は透明-->
                                        <Setter TargetName="ellipse" Property="Fill" Value="Transparent"/>
                                        <!--石の枠をプレイヤー色で表示-->
                                        <Setter TargetName="ellipse" Property="Stroke">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{Binding DataContext.CurrentPlayer, ElementName=board, Converter={StaticResource playerToColor}}"/>
                                            </Setter.Value>
                                        </Setter>
                                        <!--石の枠を点線-->
                                        <Setter TargetName="ellipse" Property="StrokeDashArray" Value="2,2"/>
                                        <!--石の枠を3点にする-->
                                        <Setter TargetName="ellipse" Property="StrokeThickness" Value="3"/>
                                        <!--クリックしたときのコマンドを設定-->
                                        <Setter TargetName="button" Property="Command" Value="{Binding Path=DataContext.PutStoneCommand, ElementName=board }"/>
                                        <Setter TargetName="button" Property="CommandParameter" Value="{Binding .}"/>
                                </DataTrigger>
                                <!--【石が置いてあるセル】-->
                                <DataTrigger Binding="{Binding CellType}" Value="PutStone">
                                    <!--石の枠線にいい感じ陰影を付ける-->
                                    <Setter TargetName="ellipse" Property="Stroke">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="1, 1" StartPoint="0, 0">
                                                <!--左上を白色(光)-->
                                                <GradientStop Color="White" Offset="0.2" />
                                                <!--右下を黒色(影)-->
                                                <GradientStop Color="Black" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <!--石にいい感じに光沢をつけて色を塗る-->
                                    <Setter TargetName="ellipse" Property="Fill">
                                        <Setter.Value>
                                            <RadialGradientBrush GradientOrigin="0.0,0.0" Center="0.5,0.5" RadiusX="0.5" RadiusY="0.5">
                                                <!--左上を白色にする-->
                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                <!--プレイヤー色で塗る-->
                                                <GradientStop Color="{Binding StoneType, Converter={StaticResource playerToColor}}" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</UserControl>
